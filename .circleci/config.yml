version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.2.0

executors:
  docker:
    docker:
      - image: docker:stable

commands:
jobs:
  lint-docker-file:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run hadolint
          command: docker run --rm --interactive hadolint/hadolint < react-application/Dockerfile

  build-docker:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t capstone-devops ./react-application
      - run:
          name: Add tagging
          command: docker tag capstone-devops lqtoan20/capstone-devops:v1
      - run:
          name: Login Docker hub
          command: docker login -u $DOCKER_USERNAME -p $DOCKER_PASS
      - run:
          name: Push image
          command: docker push lqtoan20/capstone-devops:v1

  deploy:
    docker:
      - image: cimg/python:3.11.4
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
        default: "CapstoneEKS-bFAi3ZPducNe"
      aws-region:
        description: |
          AWS region
        type: string
        default: "us-east-1"
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            sudo apt install -y tar gzip curl
      - kubernetes/install-kubectl
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: << parameters.aws-region >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: ./k8s/deployment.yml
          resource-name: deployment/capstone-app
          get-rollout-status: true
          show-kubectl-command: true
      - kubernetes/create-or-update-resource:
          resource-file-path: ./k8s/aws-auth.yml
          resource-name: configmap/aws-auth
      - run:
          name: Test cluster
          command: |
            kubectl get nodes
            kubectl get deployment
            kubectl get pod -o wide
            kubectl get services
      - run:
          name: Cleaning up
          command: docker system prune

workflows:
  deploy-react-app:
    jobs:
      - lint-docker-file
      - build-docker:
          requires: [lint-docker-file]
      - deploy:
          requires: [build-docker]
